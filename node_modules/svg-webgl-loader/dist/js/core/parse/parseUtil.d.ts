import { ShapePath } from '@/paths/ShapePath';
import { Matrix3 } from '@/math/Matrix3';
import { Scope, Style } from '@/types/types';
export declare const DEFAULT_SCOPE: Scope;
export declare const POINTS_REGEX: RegExp;
export declare const UNIT_CONVERSION: {
    mm: {
        mm: number;
        cm: number;
        in: number;
        pt: number;
        pc: number;
        px: number;
    };
    cm: {
        mm: number;
        cm: number;
        in: number;
        pt: number;
        pc: number;
        px: number;
    };
    in: {
        mm: number;
        cm: number;
        in: number;
        pt: number;
        pc: number;
        px: number;
    };
    pt: {
        mm: number;
        cm: number;
        in: number;
        pt: number;
        pc: number;
        px: number;
    };
    pc: {
        mm: number;
        cm: number;
        in: number;
        pt: number;
        pc: number;
        px: number;
    };
    px: {
        px: number;
    };
};
export declare const UNITS: string[];
export declare function parseFloatWithUnits(str: string | number, scope?: Scope): number;
export declare function iteratorPoints(path: ShapePath, node: HTMLElement): void;
export declare function parseFloats(input: string, flags?: number[], stride?: number): any[];
export declare function transformPath(path: ShapePath, m: Matrix3): void;
export declare function parseCSSStylesheet(node: any, stylesheets: {
    [key: string]: any;
}): {
    [key: string]: any;
};
export declare function parseStyle(node: HTMLElement, style: Style, stylesheets: {
    [key: string]: any;
}, scope?: Scope): Style;
export declare function getNodeTransform(node: HTMLElement, currentTransform: Matrix3, transformStack: Matrix3[], scope?: Scope): Matrix3;
